{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "RangePips.svelte",
    "RangeSlider.svelte",
    "App.svelte",
    "Axes.svelte",
    "DaylightArc.svelte",
    "EnergyArcs.svelte",
    "Net.svelte",
    "NetLegend.svelte",
    "NetSumText.svelte",
    "Nav.svelte",
    "PlanDefsBox.svelte",
    "PlanTable.svelte",
    "SeasonalChart.svelte",
    "Figure.svelte",
    "Scroller.svelte",
    "ScrollerTextBox.svelte",
    "SectionHeading.svelte",
    "Slider.svelte",
    "TextBlock.svelte",
    "Footer.svelte",
    "Hero.svelte",
    "TitleCardBg.svelte",
    "TitleCardText.svelte",
    "PlanComparison.svelte",
    "Resources.svelte",
    "Summary.svelte",
    "WalkThrough.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\texport let element = undefined;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width <= 0) {\n\t\t\tconsole.error('[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?');\n\t\t}\n\t\tif (b.height <= 0) {\n\t\t\tconsole.error('[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tbind:this={element}\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\t{element}\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let element = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tbind:this={element}\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot {element}></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let element = undefined;\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\tbind:this={element}\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot {element}></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let element = undefined;\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tbind:this={element}\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g class=\"layercake-layout-svg_g\" transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot {element}></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<script>\n\n  // range slider props\n  export let range = false;\n  export let min = 0;\n  export let max = 100;\n  export let step = 1;\n  export let values = [(max + min) / 2];\n  export let vertical = false;\n\n  // range pips / values props\n  export let pipstep = undefined;\n  export let all = true;\n  export let first = undefined;\n  export let last = undefined;\n  export let rest = undefined;\n\n  // formatting props\n  export let prefix = \"\";\n  export let suffix = \"\";\n  export let formatter = v => v;\n\n  // stylistic props\n  export let focus = undefined;\n  export let percentOf = undefined;\n\n  $: pipStep = pipstep || ((max - min) / step >= ( vertical ? 50 : 100 ) ? (max - min) / ( vertical ? 10 : 20 ) : 1);\n\n  $: pipCount = parseInt((max - min) / (step * pipStep), 10);\n\n  $: pipVal = function(val) {\n    return min + val * step * pipStep;\n  };\n\n  $: isSelected = function(val) {\n    return values.some(v => v === val);\n  };\n\n  $: inRange = function(val) {\n    if (range === \"min\") {\n      return values[0] > val;\n    } else if (range === \"max\") {\n      return values[0] < val;\n    } else if (range) {\n      return values[0] < val && values[1] > val;\n    }\n  };\n</script>\n\n<style>\n  :global(.rangeSlider) {\n    --pip: var(--range-pip, lightslategray);\n    --pip-text: var(--range-pip-text, var(--pip));\n    --pip-active: var(--range-pip-active, darkslategrey);\n    --pip-active-text: var(--range-pip-active-text, var(--pip-active));\n    --pip-in-range: var(--range-pip-in-range, var(--pip-active));\n    --pip-in-range-text: var(--range-pip-in-range-text, var(--pip-active-text));\n  }\n  :global(.rangePips) {\n    position: absolute;\n    height: 1em;\n    left: 0;\n    right: 0;\n    bottom: -1em;\n  }\n  :global(.rangePips.vertical) {\n    height: auto;\n    width: 1em;\n    left: 100%;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n  :global(.rangePips .pip) {\n    height: 0.4em;\n    position: absolute;\n    top: 0.25em;\n    width: 1px;\n    white-space: nowrap;\n  }\n  :global(.rangePips.vertical .pip) {\n    height: 1px;\n    width: 0.4em;\n    top: 0;\n    left: 0.25em;\n  }\n  :global(.rangePips .pip.selected) {\n    height: 0.75em;\n  }\n  :global(.rangePips.vertical .pip.selected) {\n    height: 1px;\n    width: 0.75em;\n  }\n  :global(.rangePips .pipVal) {\n    position: absolute;\n    top: 0.4em;\n    transform: translate(-50%, 25%);\n  }\n  :global(.rangePips.vertical .pipVal) {\n    position: absolute;\n    top: 0;\n    left: 0.4em;\n    transform: translate(25%, -50%);\n  }\n  :global(.rangePips .pip.selected .pipVal) {\n    font-weight: bold;\n    top: 0.75em;\n  }\n  :global(.rangePips.vertical .pip.selected .pipVal) {\n    top: 0;\n    left: 0.75em;\n  }\n  :global(.rangePips .pip) {\n    transition: all 0.15s ease;\n  }\n  :global(.rangePips .pipVal) {\n    transition: all 0.15s ease;\n  }\n  :global(.rangePips .pip) {\n    color: lightslategray;\n    color: var(--pip-text);\n    background-color: lightslategray;\n    background-color: var(--pip);\n  }\n  :global(.rangePips .pip.selected) {\n    color: darkslategrey;\n    color: var(--pip-active-text);\n    background-color: darkslategrey;\n    background-color: var(--pip-active);\n  }\n  :global(.rangePips .pip.in-range) {\n    color: darkslategrey;\n    color: var(--pip-in-range-text);\n    background-color: darkslategrey;\n    background-color: var(--pip-in-range);\n  }\n</style>\n\n<div class=\"rangePips\" class:focus class:vertical>\n  {#if ( all && first !== false ) || first }\n    <span\n      class=\"pip first\"\n      class:selected={isSelected(min)}\n      class:in-range={inRange(min)}\n      style=\"{vertical ? 'top' : 'left'}: 0%;\">\n      {#if all === 'label' || first === 'label'}\n        <span class=\"pipVal\">\n          {prefix}{formatter(min)}{suffix}\n        </span>\n      {/if}\n    </span>\n  {/if}\n  {#if ( all && rest !== false ) || rest}\n    {#each Array(pipCount + 1) as _, i}\n      {#if pipVal(i) !== min && pipVal(i) !== max}\n        <span\n          class=\"pip\"\n          class:selected={isSelected(pipVal(i))}\n          class:in-range={inRange(pipVal(i))}\n          style=\"{vertical ? 'top' : 'left'}: {percentOf(pipVal(i))}%;\">\n          {#if all === 'label' || rest === 'label'}\n            <span class=\"pipVal\">\n              {prefix}{formatter(pipVal(i))}{suffix}\n            </span>\n          {/if}\n        </span>\n      {/if}\n    {/each}\n  {/if}\n  {#if ( all && last !== false ) || last}\n    <span\n      class=\"pip last\"\n      class:selected={isSelected(max)}\n      class:in-range={inRange(max)}\n      style=\"{vertical ? 'top' : 'left'}: 100%;\">\n      {#if all === 'label' || last === 'label'}\n        <span class=\"pipVal\">\n          {prefix}{formatter(max)}{suffix}\n        </span>\n      {/if}\n    </span>\n  {/if}\n</div>\n",
    "<script>\n  import { spring } from \"svelte/motion\";\n  import { createEventDispatcher } from \"svelte\";\n  import RangePips from \"./RangePips.svelte\";\n\n  // range slider props\n  export let range = false;\n  export let pushy = false;\n  export let min = 0;\n  export let max = 100;\n  export let step = 1;\n  export let values = [(max + min) / 2];\n  export let vertical = false;\n  export let float = false;\n  export let hover = true;\n  export let disabled = false;\n\n  // range pips / values props\n  export let pips = false;\n  export let pipstep = undefined;\n  export let all = undefined;\n  export let first = undefined;\n  export let last = undefined;\n  export let rest = undefined;\n\n  // formatting props\n  export let id = undefined;\n  export let prefix = \"\";\n  export let suffix = \"\";\n  export let formatter = (v) => v;\n  export let handleFormatter = formatter;\n\n  // stylistic props\n  export let precision = 2;\n  export let springValues = { stiffness: 0.15, damping: 0.4 };\n\n  // prepare dispatched events\n  const dispatch = createEventDispatcher();\n\n  // dom references\n  let slider;\n\n  // state management\n  let focus = false;\n  let handleActivated = false;\n  let handlePressed = false;\n  let keyboardActive = false;\n  let activeHandle = values.length - 1;\n  let startValue;\n  let previousValue;\n\n  // copy the initial values in to a spring function which\n  // will update every time the values array is modified\n  let springPositions;\n\n  $: {\n    // check that \"values\" is an array, or set it as array\n    // to prevent any errors in springs, or range trimming\n    if ( !Array.isArray( values ) ) {\n      values = [(max + min) / 2];\n      console.error( \"'values' prop should be an Array (https://github.com/simeydotme/svelte-range-slider-pips#slider-props)\" );\n    }\n    // trim the range as needed\n    values = trimRange(values);\n    // clamp the values to the steps and boundaries set up in the slider\n    values = values.map((v) => alignValueToStep(v));\n    // update the spring function so that movement can happen in the UI\n    if ( springPositions ) {\n      springPositions.set(values.map((v) => percentOf(v)));\n    } else {\n      springPositions = spring( values.map((v) => percentOf(v)), springValues );\n    }\n  };\n\n  /**\n   * take in a value, and then calculate that value's percentage\n   * of the overall range (min-max);\n   * @param {number} val the value we're getting percent for\n   * @return {number} the percentage value\n   **/\n  $: percentOf = function (val) {\n    let perc = ((val - min) / (max - min)) * 100;\n    if (isNaN(perc) || perc <= 0) {\n      return 0;\n    } else if (perc >= 100) {\n      return 100;\n    } else {\n      return parseFloat(perc.toFixed(precision));\n    }\n  };\n\n  /**\n   * clamp a value from the range so that it always\n   * falls within the min/max values\n   * @param {number} val the value to clamp\n   * @return {number} the value after it's been clamped\n   **/\n  $: clampValue = function (val) {\n    // return the min/max if outside of that range\n    return val <= min ? min : val >= max ? max : val;\n  };\n\n  /**\n   * align the value with the steps so that it\n   * always sits on the closest (above/below) step\n   * @param {number} val the value to align\n   * @return {number} the value after it's been aligned\n   **/\n  $: alignValueToStep = function (val) {\n    // sanity check for performance\n    if (val <= min) {\n      return min;\n    } else if (val >= max) {\n      return max;\n    }\n\n    // find the middle-point between steps\n    // and see if the value is closer to the\n    // next step, or previous step\n    let remainder = (val - min) % step;\n    let aligned = val - remainder;\n    if (Math.abs(remainder) * 2 >= step) {\n      aligned += remainder > 0 ? step : -step;\n    }\n    // make sure the value is within acceptable limits\n    aligned = clampValue(aligned);\n    // make sure the returned value is set to the precision desired\n    // this is also because javascript often returns weird floats\n    // when dealing with odd numbers and percentages\n\n    return parseFloat(aligned.toFixed(precision));\n  };\n\n  /**\n   * helper func to get the index of an element in it's DOM container\n   * @param {object} el dom object reference we want the index of\n   * @returns {number} the index of the input element\n   **/\n  function index(el) {\n    if (!el) return -1;\n    var i = 0;\n    while ((el = el.previousElementSibling)) {\n      i++;\n    }\n    return i;\n  }\n\n  /**\n   * noramlise a mouse or touch event to return the\n   * client (x/y) object for that event\n   * @param {event} e a mouse/touch event to normalise\n   * @returns {object} normalised event client object (x,y)\n   **/\n  function normalisedClient(e) {\n    if (e.type.includes(\"touch\")) {\n      return e.touches[0];\n    } else {\n      return e;\n    }\n  }\n\n  /**\n   * check if an element is a handle on the slider\n   * @param {object} el dom object reference we want to check\n   * @returns {boolean}\n   **/\n  function targetIsHandle(el) {\n    const handles = slider.querySelectorAll(\".handle\");\n    const isHandle = Array.prototype.includes.call(handles, el);\n    const isChild = Array.prototype.some.call(handles, (e) => e.contains(el));\n    return isHandle || isChild;\n  }\n\n  /**\n   * trim the values array based on whether the property\n   * for 'range' is 'min', 'max', or truthy. This is because we\n   * do not want more than one handle for a min/max range, and we do\n   * not want more than two handles for a true range.\n   * @param {array} values the input values for the rangeSlider\n   * @return {array} the range array for creating a rangeSlider\n   **/\n  function trimRange(values) {\n    if (range === \"min\" || range === \"max\") {\n      return values.slice(0, 1);\n    } else if (range) {\n      return values.slice(0, 2);\n    } else {\n      return values;\n    }\n  }\n\n  /**\n   * helper to return the slider dimensions for finding\n   * the closest handle to user interaction\n   * @return {object} the range slider DOM client rect\n   **/\n  function getSliderDimensions() {\n    return slider.getBoundingClientRect();\n  }\n\n  /**\n   * helper to return closest handle to user interaction\n   * @param {object} clientPos the client{x,y} positions to check against\n   * @return {number} the index of the closest handle to clientPos\n   **/\n  function getClosestHandle(clientPos) {\n    // first make sure we have the latest dimensions\n    // of the slider, as it may have changed size\n    const dims = getSliderDimensions();\n    // calculate the interaction position, percent and value\n    let hPos = 0;\n    let hPercent = 0;\n    let hVal = 0;\n    if (vertical) {\n      hPos = clientPos.clientY - dims.top;\n      hPercent = (hPos / dims.height) * 100;\n      hVal = ((max - min) / 100) * hPercent + min;\n    } else {\n      hPos = clientPos.clientX - dims.left;\n      hPercent = (hPos / dims.width) * 100;\n      hVal = ((max - min) / 100) * hPercent + min;\n    }\n\n    let closest;\n\n    // if we have a range, and the handles are at the same\n    // position, we want a simple check if the interaction\n    // value is greater than return the second handle\n    if (range === true && values[0] === values[1]) {\n      if (hVal > values[1]) {\n        return 1;\n      } else {\n        return 0;\n      }\n      // if there are multiple handles, and not a range, then\n      // we sort the handles values, and return the first one closest\n      // to the interaction value\n    } else {\n      closest = values.indexOf(\n        [...values].sort((a, b) => Math.abs(hVal - a) - Math.abs(hVal - b))[0]\n      );\n    }\n    return closest;\n  }\n\n  /**\n   * take the interaction position on the slider, convert\n   * it to a value on the range, and then send that value\n   * through to the moveHandle() method to set the active\n   * handle's position\n   * @param {object} clientPos the client{x,y} of the interaction\n   **/\n  function handleInteract(clientPos) {\n    // first make sure we have the latest dimensions\n    // of the slider, as it may have changed size\n    const dims = getSliderDimensions();\n    // calculate the interaction position, percent and value\n    let hPos = 0;\n    let hPercent = 0;\n    let hVal = 0;\n    if (vertical) {\n      hPos = clientPos.clientY - dims.top;\n      hPercent = (hPos / dims.height) * 100;\n      hVal = ((max - min) / 100) * hPercent + min;\n    } else {\n      hPos = clientPos.clientX - dims.left;\n      hPercent = (hPos / dims.width) * 100;\n      hVal = ((max - min) / 100) * hPercent + min;\n    }\n    // move handle to the value\n    moveHandle(activeHandle, hVal);\n  }\n\n  /**\n   * move a handle to a specific value, respecting the clamp/align rules\n   * @param {number} index the index of the handle we want to move\n   * @param {number} value the value to move the handle to\n   * @return {number} the value that was moved to (after alignment/clamping)\n   **/\n  function moveHandle(index, value) {\n    // align & clamp the value so we're not doing extra\n    // calculation on an out-of-range value down below\n    value = alignValueToStep(value);\n    // if this is a range slider\n    if (range) {\n      // restrict the handles of a range-slider from\n      // going past one-another unless \"pushy\" is true\n      if (index === 0 && value > values[1]) {\n        if (pushy) {\n          values[1] = value;\n        } else {\n          value = values[1];\n        }\n      } else if (index === 1 && value < values[0]) {\n        if (pushy) {\n          values[0] = value;\n        } else {\n          value = values[0];\n        }\n      }\n    }\n\n    // if the value has changed, update it\n    if (values[index] !== value) {\n      values[index] = value;\n    }\n\n    // fire the change event when the handle moves,\n    // and store the previous value for the next time\n    if (previousValue !== value) {\n      eChange();\n      previousValue = value;\n    }\n  }\n\n  /**\n   * helper to find the beginning range value for use with css style\n   * @param {array} values the input values for the rangeSlider\n   * @return {number} the beginning of the range\n   **/\n  function rangeStart(values) {\n    if (range === \"min\") {\n      return 0;\n    } else {\n      return values[0];\n    }\n  }\n\n  /**\n   * helper to find the ending range value for use with css style\n   * @param {array} values the input values for the rangeSlider\n   * @return {number} the end of the range\n   **/\n  function rangeEnd(values) {\n    if (range === \"max\") {\n      return 0;\n    } else if (range === \"min\") {\n      return 100 - values[0];\n    } else {\n      return 100 - values[1];\n    }\n  }\n\n  /**\n   * when the user has unfocussed (blurred) from the\n   * slider, deactivated all handles\n   * @param {event} e the event from browser\n   **/\n  function sliderBlurHandle(e) {\n    if (keyboardActive) {\n      focus = false;\n      handleActivated = false;\n      handlePressed = false;\n    }\n  }\n\n  /**\n   * when the user focusses the handle of a slider\n   * set it to be active\n   * @param {event} e the event from browser\n   **/\n  function sliderFocusHandle(e) {\n    if ( !disabled ) {\n      activeHandle = index(e.target);\n      focus = true;\n    }\n  }\n\n  /**\n   * handle the keyboard accessible features by checking the\n   * input type, and modfier key then moving handle by appropriate amount\n   * @param {event} e the event from browser\n   **/\n  function sliderKeydown(e) {\n    if ( !disabled ) {\n      const handle = index(e.target);\n      let jump = e.ctrlKey || e.metaKey || e.shiftKey ? step * 10 : step;\n      let prevent = false;\n\n      switch (e.key) {\n        case \"PageDown\":\n          jump *= 10;\n        case \"ArrowRight\":\n        case \"ArrowUp\":\n          moveHandle(handle, values[handle] + jump);\n          prevent = true;\n          break;\n        case \"PageUp\":\n          jump *= 10;\n        case \"ArrowLeft\":\n        case \"ArrowDown\":\n          moveHandle(handle, values[handle] - jump);\n          prevent = true;\n          break;\n        case \"Home\":\n          moveHandle(handle, min);\n          prevent = true;\n          break;\n        case \"End\":\n          moveHandle(handle, max);\n          prevent = true;\n          break;\n      }\n      if (prevent) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  }\n\n  /**\n   * function to run when the user touches\n   * down on the slider element anywhere\n   * @param {event} e the event from browser\n   **/\n  function sliderInteractStart(e) {\n    if ( !disabled ) {\n      const clientPos = normalisedClient(e);\n      // set the closest handle as active\n      focus = true;\n      handleActivated = true;\n      handlePressed = true;\n      activeHandle = getClosestHandle(clientPos);\n\n      // fire the start event\n      startValue = previousValue = alignValueToStep(values[activeHandle]);\n      eStart();\n\n      // for touch devices we want the handle to instantly\n      // move to the position touched for more responsive feeling\n      if (e.type === \"touchstart\") {\n        handleInteract(clientPos);\n      }\n    }\n  }\n\n  /**\n   * function to run when the user stops touching\n   * down on the slider element anywhere\n   * @param {event} e the event from browser\n   **/\n  function sliderInteractEnd(e) {\n    // fire the stop event for touch devices\n    if (e.type === \"touchend\") {\n      eStop();\n    }\n    handlePressed = false;\n  }\n\n  /**\n   * unfocus the slider if the user clicked off of\n   * it, somewhere else on the screen\n   * @param {event} e the event from browser\n   **/\n  function bodyInteractStart(e) {\n    keyboardActive = false;\n    if (focus && e.target !== slider && !slider.contains(e.target)) {\n      focus = false;\n    }\n  }\n\n  /**\n   * send the clientX through to handle the interaction\n   * whenever the user moves acros screen while active\n   * @param {event} e the event from browser\n   **/\n  function bodyInteract(e) {\n    if ( !disabled ) {\n      if (handleActivated) {\n        handleInteract(normalisedClient(e));\n      }\n    }\n  }\n\n  /**\n   * if user triggers mouseup on the body while\n   * a handle is active (without moving) then we\n   * trigger an interact event there\n   * @param {event} e the event from browser\n   **/\n  function bodyMouseUp(e) {\n    if ( !disabled ) {\n      const el = e.target;\n      // this only works if a handle is active, which can\n      // only happen if there was sliderInteractStart triggered\n      // on the slider, already\n      if (handleActivated) {\n        if (el === slider || slider.contains(el)) {\n          focus = true;\n          if (!targetIsHandle(el)) {\n            handleInteract(normalisedClient(e));\n          }\n        }\n        // fire the stop event for mouse device\n        // when the body is triggered with an active handle\n        eStop();\n      }\n    }\n    handleActivated = false;\n    handlePressed = false;\n  }\n\n  /**\n   * if user triggers touchend on the body then we\n   * defocus the slider completely\n   * @param {event} e the event from browser\n   **/\n  function bodyTouchEnd(e) {\n    handleActivated = false;\n    handlePressed = false;\n  }\n\n  function bodyKeyDown(e) {\n    if ( !disabled ) {\n      if (e.target === slider || slider.contains(e.target)) {\n        keyboardActive = true;\n      }\n    }\n  }\n\n  function eStart() {\n    !disabled && dispatch(\"start\", {\n      activeHandle,\n      value: startValue,\n      values: values.map((v) => alignValueToStep(v)),\n    });\n  }\n\n  function eStop() {\n    !disabled && dispatch(\"stop\", {\n      activeHandle,\n      startValue: startValue,\n      value: values[activeHandle],\n      values: values.map((v) => alignValueToStep(v)),\n    });\n  }\n\n  function eChange() {\n    !disabled && dispatch(\"change\", {\n      activeHandle,\n      startValue: startValue,\n      previousValue:\n        typeof previousValue === \"undefined\" ? startValue : previousValue,\n      value: values[activeHandle],\n      values: values.map((v) => alignValueToStep(v)),\n    });\n  }\n</script>\n\n<style>\n  :global(.rangeSlider) {\n    --slider: var(--range-slider, #d7dada);\n    --handle-inactive: var(--range-handle-inactive, #99a2a2);\n    --handle: var(--range-handle, #838de7);\n    --handle-focus: var(--range-handle-focus, #4a40d4);\n    --handle-border: var(--range-handle-border, var(--handle));\n    --range-inactive: var(--range-range-inactive, var(--handle-inactive));\n    --range: var(--range-range, var(--handle-focus));\n    --float-inactive: var(--range-float-inactive, var(--handle-inactive));\n    --float: var(--range-float, var(--handle-focus));\n    --float-text: var(--range-float-text, white);\n  }\n  :global(.rangeSlider) {\n    position: relative;\n    border-radius: 100px;\n    height: 0.5em;\n    margin: 1em;\n    transition: opacity 0.2s ease;\n      user-select: none;\n  }\n  :global(.rangeSlider *) {\n    user-select: none;\n  }\n  :global(.rangeSlider.pips) {\n    margin-bottom: 1.8em;\n  }\n  :global(.rangeSlider.pip-labels) {\n    margin-bottom: 2.8em;\n  }\n  :global(.rangeSlider.vertical) {\n    display: inline-block;\n    border-radius: 100px;\n    width: 0.5em;\n    min-height: 200px;\n  }\n  :global(.rangeSlider.vertical.pips) {\n    margin-right: 1.8em;\n    margin-bottom: 1em;\n  }\n  :global(.rangeSlider.vertical.pip-labels) {\n    margin-right: 2.8em;\n    margin-bottom: 1em;\n  }\n  :global(.rangeSlider .rangeHandle) {\n    position: absolute;\n    display: block;\n    height: 1.4em;\n    width: 1.4em;\n    top: 0.25em;\n    left: 0.25em;\n    transform: translateY(-50%) translateX(-50%);\n    z-index: 2;\n  }\n  :global(.rangeSlider .rangeNub),\n  :global(.rangeSlider .rangeHandle:before) {\n    position: absolute;\n    left: 0;\n    top: 0;\n    display: block;\n    border-radius: 10em;\n    height: 100%;\n    width: 100%;\n    transition: all 0.2s ease;\n  }\n  :global(.rangeSlider .rangeHandle:before) {\n    content: \"\";\n    left: 1px;\n    top: 1px;\n    bottom: 1px;\n    right: 1px;\n    height: auto;\n    width: auto;\n    box-shadow: 0 0 0 0px var(--handle-border);\n    opacity: 0;\n  }\n  :global(.rangeSlider .rangeHandle.hoverable:hover:before) {\n    box-shadow: 0 0 0 8px var(--handle-border);\n    opacity: 0.2;\n  }\n  :global(.rangeSlider .rangeHandle.hoverable.press:before),\n  :global(.rangeSlider .rangeHandle.hoverable.press:hover:before) {\n    box-shadow: 0 0 0 12px var(--handle-border);\n    opacity: 0.4;\n  }\n  :global(.rangeSlider.range:not(.min):not(.max) .rangeNub) {\n    border-radius: 10em 10em 10em 1.6em;\n  }\n  :global(.rangeSlider.range .rangeHandle:nth-of-type(1) .rangeNub) {\n    transform: rotate(-135deg);\n  }\n  :global(.rangeSlider.range .rangeHandle:nth-of-type(2) .rangeNub) {\n    transform: rotate(45deg);\n  }\n  :global(.rangeSlider.range.vertical .rangeHandle:nth-of-type(1) .rangeNub) {\n    transform: rotate(-45deg);\n  }\n  :global(.rangeSlider.range.vertical .rangeHandle:nth-of-type(2) .rangeNub) {\n    transform: rotate(135deg);\n  }\n  :global(.rangeSlider .rangeFloat) {\n    display: block;\n    position: absolute;\n    left: 50%;\n    top: -0.5em;\n    transform: translate(-50%, -100%);\n    font-size: 1em;\n    text-align: center;\n    opacity: 0;\n    pointer-events: none;\n    white-space: nowrap;\n    transition: all 0.2s ease;\n    font-size: 0.9em;\n    padding: 0.2em 0.4em;\n    border-radius: 0.2em;\n  }\n  :global(.rangeSlider .rangeHandle.active .rangeFloat),\n  :global(.rangeSlider .rangeHandle.hoverable:hover .rangeFloat) {\n    opacity: 1;\n    top: -0.2em;\n    transform: translate(-50%, -100%);\n  }\n  :global(.rangeSlider .rangeBar) {\n    position: absolute;\n    display: block;\n    transition: background 0.2s ease;\n    border-radius: 1em;\n    height: 0.5em;\n    top: 0;\n    user-select: none;\n    z-index: 1;\n  }\n  :global(.rangeSlider.vertical .rangeBar) {\n    width: 0.5em;\n    height: auto;\n  }\n  :global(.rangeSlider) {\n    background-color: #d7dada;\n    background-color: var(--slider);\n  }\n  :global(.rangeSlider .rangeBar) {\n    background-color: #99a2a2;\n    background-color: var(--range-inactive);\n  }\n  :global(.rangeSlider.focus .rangeBar) {\n    background-color: #838de7;\n    background-color: var(--range);\n  }\n  :global(.rangeSlider .rangeNub) {\n    background-color: #99a2a2;\n    background-color: var(--handle-inactive);\n  }\n  :global(.rangeSlider.focus .rangeNub) {\n    background-color: #838de7;\n    background-color: var(--handle);\n  }\n  :global(.rangeSlider .rangeHandle.active .rangeNub) {\n    background-color: #4a40d4;\n    background-color: var(--handle-focus);\n  }\n  :global(.rangeSlider .rangeFloat) {\n    color: white;\n    color: var(--float-text);\n    background-color: #99a2a2;\n    background-color: var(--float-inactive);\n  }\n  :global(.rangeSlider.focus .rangeFloat) {\n    background-color: #4a40d4;\n    background-color: var(--float);\n  }\n  :global(.rangeSlider.disabled ) {\n    opacity: 0.5;\n  }\n  :global(.rangeSlider.disabled .rangeNub) {\n    background-color: #d7dada;\n    background-color: var(--slider);\n  }\n</style>\n\n<div\n  {id}\n  bind:this={slider}\n  class=\"rangeSlider\"\n  class:range\n  class:disabled\n  class:vertical\n  class:focus\n  class:min={range === 'min'}\n  class:max={range === 'max'}\n  class:pips\n  class:pip-labels={all === 'label' || first === 'label' || last === 'label' || rest === 'label'}\n  on:mousedown={sliderInteractStart}\n  on:mouseup={sliderInteractEnd}\n  on:touchstart|preventDefault={sliderInteractStart}\n  on:touchend|preventDefault={sliderInteractEnd}\n>\n  {#each values as value, index}\n    <span\n      role=\"slider\"\n      class=\"rangeHandle\"\n      class:hoverable={hover && !disabled}\n      class:active={focus && activeHandle === index}\n      class:press={handlePressed && activeHandle === index}\n      on:blur={sliderBlurHandle}\n      on:focus={sliderFocusHandle}\n      on:keydown={sliderKeydown}\n      style=\"{vertical ? 'top' : 'left'}: {$springPositions[index]}%; z-index: {activeHandle === index ? 3 : 2};\"\n      aria-valuemin={range === true && index === 1 ? values[0] : min}\n      aria-valuemax={range === true && index === 0 ? values[1] : max}\n      aria-valuenow={value}\n      aria-valuetext=\"{prefix}{handleFormatter(value)}{suffix}\"\n      aria-orientation={vertical ? 'vertical' : 'horizontal'}\n      aria-disabled={disabled}\n      {disabled}\n      tabindex=\"{ disabled ? -1 : 0 }\"\n    >\n      <span class=\"rangeNub\" />\n      {#if float}\n        <span class=\"rangeFloat\">{prefix}{handleFormatter(value)}{suffix}</span>\n      {/if}\n    </span>\n  {/each}\n  {#if range}\n    <span\n      class=\"rangeBar\"\n      style=\"{vertical ? 'top' : 'left'}: {rangeStart($springPositions)}%; {vertical ? 'bottom' : 'right'}:\n      {rangeEnd($springPositions)}%;\" />\n  {/if}\n  {#if pips}\n    <RangePips\n      {values}\n      {min}\n      {max}\n      {step}\n      {range}\n      {vertical}\n      {all}\n      {first}\n      {last}\n      {rest}\n      {pipstep}\n      {prefix}\n      {suffix}\n      {formatter}\n      {focus}\n      {disabled}\n      {percentOf} />\n  {/if}\n</div>\n\n<svelte:window\n  on:mousedown={bodyInteractStart}\n  on:touchstart={bodyInteractStart}\n  on:mousemove={bodyInteract}\n  on:touchmove={bodyInteract}\n  on:mouseup={bodyMouseUp}\n  on:touchend={bodyTouchEnd}\n  on:keydown={bodyKeyDown} />\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import Head from \"./components/common/Head.svelte\";\n  import Hero from \"./sections/Hero/Hero.svelte\";\n  import Summary from \"./sections/Summary/Summary.svelte\";\n  import WalkThrough from \"./sections/WalkThrough/WalkThrough.svelte\";\n  import PlanComparison from \"./sections/PlanComparison/PlanComparison.svelte\";\n  import Resources from \"./sections/Resources/Resources.svelte\";\n  import Footer from \"./sections/Footer/Footer.svelte\";\n  import Nav from \"./components/Nav.svelte\";\n  import docs from \"./data/doc.json\";\n\n  // Load the Observable runtime and inspector.\n  import { Runtime } from \"https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\";\n  import notebook from \"https://api.observablehq.com/d/75836c71d23e67a3@1274.js?v=3\";\n  const module = new Runtime().module(notebook);\n\n  let solarUtils = { loaded: false };\n  onMount(async () => {\n    let cells = [\n      \"plans\",\n      \"months\",\n      \"generateMonthlyData\",\n      \"generateMeanData\",\n      \"generateMonthlyBills\",\n      \"generateAnnualBills\",\n    ];\n    cells.forEach(async (cellName, i) => {\n      solarUtils[cellName] = await module.value(cellName);\n      solarUtils.loaded = Object.keys(solarUtils).length === cells.length + 1;\n    });\n  });\n\n  // Get navigation section names\n  $: sectionNames = docs[\"navigation\"].map(d => d.title);\n\n  $: planDefs = docs.section1.planDefinitions;\n</script>\n\n<Head />\n\n<Hero sectionText={docs.hero} />\n<div class=\"app-container\">\n  <Nav {sectionNames} />\n  <Summary sectionText={docs.section1} />\n  <WalkThrough sectionText={docs.section2} {solarUtils} />\n  <PlanComparison sectionText={docs.section3} {planDefs} {solarUtils} />\n  <Resources sectionText={docs.section4} />\n  <Footer sectionText={docs.footer} />\n</div>\n\n<style>\n  .app-container {\n    background-color: var(--white);\n    z-index: 10;\n  }\n</style>\n",
    "<script>\n  import { polar2cart, rad2deg } from \"../utils.js\";\n  import dayjs from \"dayjs\";\n  import { getContext, tick } from \"svelte\";\n\n  export let selectedTs = null;\n\n  const { data, xScale, yScale, yDomain, width, height } = getContext(\"LayerCake\");\n\n  // Prep the hour labels\n  $: xTickVals = $data\n    .filter(d => {\n      if (selectedTs) {\n        return d.ts === selectedTs; // <- only show selected tick mark\n      } else {\n        return (d.ts !== 0) & (d.ts % 3 === 0);\n      }\n    })\n    .map((d, i) => {\n      const outerY = $yScale.range()[1];\n      const theta = $xScale(d.ts);\n      return {\n        x1: polar2cart(outerY, theta).x,\n        y1: polar2cart(outerY, theta).y,\n        x2: polar2cart(outerY * 1.02, theta).x,\n        y2: polar2cart(outerY * 1.02, theta).y,\n        xText: polar2cart(outerY * 1.05, theta).x,\n        yText: polar2cart(outerY * 1.05, theta).y,\n        textRotation: rad2deg(theta),\n        ts: d.ts,\n        text: d.ts === 12 ? \"Noon\" : dayjs().hour(d.ts).format(\"h a\"),\n      };\n    });\n\n  $: yGridLocs = [0, ...$yDomain].map(d => {\n    return {\n      radius: $yScale(d),\n      class: d === 0 ? \"major\" : \"minor\",\n    };\n  });\n\n  $: yTickVals = $xScale.range().flatMap((xPos, xIdx) => {\n    const isLeftTicks = xIdx === 0;\n    return [0, ...$yDomain].map(yPos => {\n      let textAnchor, label;\n      if (isLeftTicks) {\n        textAnchor = yPos === 0 ? \"middle\" : Math.sign(yPos) === 1 ? \"start\" : \"end\";\n        label =\n          yPos === 0 ? yPos : Math.sign(yPos) === 1 ? `${yPos} kWh ⟵` : `⟶ ${Math.abs(yPos)} kWh`;\n      } else {\n        textAnchor = yPos === 0 ? \"middle\" : Math.sign(yPos) === 1 ? \"end\" : \"start\";\n        label =\n          yPos === 0 ? yPos : Math.sign(yPos) === 1 ? `⟶ ${yPos} kWh` : `${Math.abs(yPos)} kWh ⟵`;\n      }\n      return {\n        x: polar2cart($yScale(yPos * 1.15), xPos).x,\n        y: polar2cart($yScale(yPos * 1.15), xPos).y + 10,\n        anchor: textAnchor,\n        text: label,\n        yVal: yPos,\n      };\n    });\n  });\n</script>\n\n<defs>\n  <!-- Clip Path. When used, everything within this mask will be visible -->\n  <clipPath id=\"cut-off-bottom\">\n    <rect x={-$width / 2} y={-$height} width={$width} height={$height} />\n  </clipPath>\n</defs>\n\n<g transform=\"translate({$width / 2}, {$height})\">\n  <!-- <rect x={-$width / 2} y={-$height} width={$width} height={$height} fill=\"red\" opacity=\".3\" /> -->\n\n  <!-- X-axis -->\n  <g class=\"axis x-axis\">\n    {#each xTickVals as tick, i}\n      <g>\n        <line x1={tick.x1} x2={tick.x2} y1={tick.y1} y2={tick.y2} />\n        <text\n          transform=\"translate({tick.xText}, {tick.yText}) rotate({tick.textRotation})\"\n          text-anchor=\"middle\">{tick.text}</text\n        >\n      </g>\n    {/each}\n  </g>\n\n  <!-- Y-grid -->\n  <g class=\"y-grid\">\n    {#each yGridLocs as yGrid}\n      <circle\n        class={`y-grid-line ${yGrid.class}`}\n        cx=\"0\"\n        cy=\"0\"\n        r={yGrid.radius}\n        fill=\"none\"\n        clip-path=\"url(#cut-off-bottom)\"\n      />\n    {/each}\n  </g>\n\n  <!-- Y-axis labels -->\n  <g class=\"y-axis\">\n    {#each yTickVals as tick, i}\n      <text\n        transform=\"translate({tick.x}, {tick.y})\"\n        font-size=\"12px\"\n        alignment-baseline=\"hanging\"\n        text-anchor={tick.anchor}\n      >\n        {tick.text}\n        {#if tick.yVal !== 0}\n          <tspan font-style=\"italic\" x=\"0\" dy=\"25\">\n            {#if Math.sign(tick.yVal) === 1}\n              usage\n            {:else}\n              generation\n            {/if}\n          </tspan>\n        {/if}\n      </text>\n    {/each}\n  </g>\n</g>\n\n<style lang=\"scss\">.x-axis text {\n  fill: var(--dGray);\n  font-size: 1.4em;\n}\n.x-axis line {\n  stroke: var(--dGray);\n}\n\n.y-axis text {\n  fill: var(--dGray);\n  font-size: \"6px\";\n}\n\n.y-grid-line.major {\n  stroke: var(--dGray);\n  stroke-dasharray: 0;\n}\n\n.y-grid-line.minor {\n  stroke: #ccc;\n  stroke-dasharray: 2;\n}</style>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { fade } from \"svelte/transition\";\n  import { arc } from \"d3-shape\";\n  import { scaleLinear } from \"d3-scale\";\n  import { extent } from \"d3-array\";\n  import { polar2cart } from \"components/utils\";\n\n  export let chartState;\n  export let daylight = { sunrise: 6, sunset: 20 };\n\n  const arcFn = arc();\n  const { xScale, yScale, width, height } = getContext(\"LayerCake\");\n\n  $: showGeneration = chartState.generation;\n\n  // need to create a new scale that is not a bandwidth scale\n  $: daylightXScale = scaleLinear().domain(extent($xScale.domain())).range($xScale.range());\n\n  $: daylightArc = arcFn({\n    innerRadius: $yScale(-7.5),\n    outerRadius: $yScale(-6.5),\n    startAngle: daylightXScale(daylight.sunrise),\n    endAngle: daylightXScale(daylight.sunset),\n    padAngle: 0,\n  });\n\n  $: nightArc = arcFn({\n    innerRadius: $yScale(-7.5),\n    outerRadius: $yScale(-6.5),\n    startAngle: daylightXScale(0),\n    endAngle: daylightXScale(23),\n    padAngle: 0,\n  });\n</script>\n\n{#if showGeneration}\n  <g transition:fade transform=\"translate({$width / 2}, {$height})\">\n    <path class=\"night-arc\" d={nightArc} />\n    <path class=\"day-arc\" d={daylightArc} />\n    <text\n      class=\"daylight-label\"\n      x={polar2cart($yScale(-8.5), $xScale(12)).x}\n      y={polar2cart($yScale(-8.5), $xScale(12)).y}\n      text-anchor=\"middle\"\n      alignment-baseline=\"hanging\">daylight</text\n    >\n  </g>\n{/if}\n\n<style>\n  .night-arc {\n    fill: slategray;\n    stroke: slategray;\n  }\n\n  .day-arc {\n    fill: cornsilk;\n    stroke: slategray;\n  }\n\n  .daylight-label {\n    font-size: 12px;\n    font-style: italic;\n    fill: var(--dGray);\n  }\n</style>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { arc } from \"d3-shape\";\n\n  export let chartState;\n  export let selectedTs;\n\n  const arcFn = arc();\n  const { data, xScale, yScale, width, height } = getContext(\"LayerCake\");\n\n  $: showUsage = chartState.usage;\n  $: showGeneration = chartState.generation;\n\n  $: usageArcs = $data.map(d => {\n    const arcOptions = {\n      innerRadius: $yScale(0),\n      outerRadius: $yScale(d.usage),\n      startAngle: $xScale(d.ts),\n      endAngle: $xScale(d.ts) + $xScale.bandwidth(),\n      padAngle: 0.015,\n    };\n    return {\n      d: arcFn(arcOptions),\n      ...d,\n    };\n  });\n\n  $: genArcs = $data.map(d => {\n    const arcOptions = {\n      innerRadius: $yScale(-d.generation),\n      outerRadius: $yScale(0),\n      startAngle: $xScale(d.ts),\n      endAngle: $xScale(d.ts) + $xScale.bandwidth(),\n      padAngle: 0.015,\n    };\n    return {\n      d: arcFn(arcOptions),\n      ...d,\n    };\n  });\n\n  // --- Animation fns\n  const buildIn = (node, { index = 0 }) => {\n    // stagger add each element based on index position\n    return {\n      delay: index * 100,\n      css: t => `opacity: ${t > 0 ? 1 : 0}`,\n    };\n  };\n  const buildOut = (node, { index = 0 }) => {\n    // stagger remove each element based on index position. First in/Last out.\n    return {\n      delay: ($data.length - index) * 50,\n      css: t => `opacity: ${t < 1 ? 0 : 1}`,\n    };\n  };\n</script>\n\n<g transform=\"translate({$width / 2}, {$height})\">\n  <!-- USAGE ARCS -->\n  {#if showUsage}\n    {#each usageArcs as arc, index}\n      <path\n        class=\"usage\"\n        in:buildIn={{ index }}\n        out:buildOut={{ index }}\n        d={arc.d}\n        opacity={!selectedTs ? 1 : selectedTs === arc.ts ? 1 : 0.3}\n      />\n    {/each}\n  {/if}\n\n  <!-- GENERATION ARCS -->\n  {#if showGeneration}\n    {#each genArcs as arc, index}\n      <path\n        class=\"generation\"\n        in:buildIn={{ index }}\n        out:buildOut={{ index }}\n        d={arc.d}\n        opacity={!selectedTs ? 1 : selectedTs === arc.ts ? 1 : 0.3}\n      />\n    {/each}\n  {/if}\n</g>\n\n<style>\n  .usage {\n    fill: #ccc;\n    fill-opacity: 0.5;\n    stroke: #ccc;\n  }\n\n  .generation {\n    fill: #999;\n    fill-opacity: 0.5;\n    stroke: #999;\n  }\n</style>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { draw, fade } from \"svelte/transition\";\n  import { linear } from \"svelte/easing\";\n  import { line } from \"d3-shape\";\n  import { polar2cart } from \"../utils.js\";\n  import { colorScale } from \"./dailyChartUtils\";\n\n  export let chartState;\n  export let selectedTs;\n\n  const { data, xScale, yScale, width, height } = getContext(\"LayerCake\");\n  const connectorLineFn = line()\n    .x(d => polar2cart($yScale(d.net), $xScale(d.ts) + $xScale.bandwidth() / 2).x)\n    .y(d => polar2cart($yScale(d.net), $xScale(d.ts) + $xScale.bandwidth() / 2).y);\n\n  $: showNet = chartState.net;\n\n  $: netCircles = $data.map(d => ({\n    cx: polar2cart($yScale(d.net), $xScale(d.ts) + $xScale.bandwidth() / 2).x,\n    cy: polar2cart($yScale(d.net), $xScale(d.ts) + $xScale.bandwidth() / 2).y,\n    ...d,\n  }));\n\n  $: netArrows = $data.map(d => {\n    const showArrow = d.usage - d.net > 1.4;\n    let start, end;\n    if (showArrow) {\n      start = polar2cart($yScale(d.usage), $xScale(d.ts) + $xScale.bandwidth() / 2);\n      end = polar2cart($yScale(d.net + 1.2), $xScale(d.ts) + $xScale.bandwidth() / 2);\n    } else {\n      start = polar2cart($yScale(0), $xScale(d.ts) + $xScale.bandwidth() / 2);\n      end = polar2cart($yScale(0), $xScale(d.ts) + $xScale.bandwidth() / 2);\n    }\n\n    return {\n      ...d,\n      x1: start.x,\n      y1: start.y,\n      x2: end.x,\n      y2: end.y,\n      showArrow,\n    };\n  });\n\n  // --- Animation fns\n  const inStepDuration = 100;\n  const outStepDuration = 50;\n  const buildIn = (node, { index = 0 }) => {\n    // stagger add each element based on index position\n    return {\n      delay: index * inStepDuration,\n      css: t => `opacity: ${t > 0 ? 1 : 0}`,\n    };\n  };\n  const buildOut = (node, { index = 0 }) => {\n    // stagger remove each element based on index position. First in/Last out.\n    return {\n      delay: ($data.length - index) * outStepDuration,\n      css: t => `opacity: ${t < 1 ? 0 : 1}`,\n    };\n  };\n</script>\n\n<defs>\n  <marker\n    id=\"arrow\"\n    viewBox=\"0,0,10,10\"\n    refX=\"5\"\n    refY=\"5\"\n    markerWidth=\"5\"\n    markerHeight=\"5\"\n    orient=\"auto-start-reverse\"\n  >\n    <path class=\"arrowhead\" d=\"M0,0L0,10L10,5\" />\n  </marker>\n</defs>\n\n<g transform=\"translate({$width / 2}, {$height})\">\n  {#if showNet}\n    <!-- Net Arrows -->\n    {#each netArrows as arrow, index}\n      <line\n        in:buildIn={{ index }}\n        out:buildOut={{ index }}\n        class=\"net-arrow\"\n        x1={arrow.x1}\n        y1={arrow.y1}\n        x2={arrow.x2}\n        y2={arrow.y2}\n        marker-end={`${arrow.showArrow ? \"url(#arrow)\" : null}`}\n      />\n    {/each}\n\n    <!-- Net Connector line -->\n    <path\n      class=\"net-connector-line\"\n      in:draw={{ duration: $data.length * inStepDuration, easing: linear }}\n      out:draw={{ duration: $data.length * outStepDuration, easing: linear }}\n      d={connectorLineFn($data)}\n      fill=\"none\"\n      stroke-dasharray=\"6 2\"\n    />\n\n    <!-- Net Circles -->\n    {#each netCircles as circle, index}\n      <circle\n        class=\"net-circle\"\n        in:buildIn={{ index }}\n        out:buildOut={{ index }}\n        cx={circle.cx}\n        cy={circle.cy}\n        r=\"7\"\n        fill={colorScale(circle.net)}\n      />\n    {/each}\n  {/if}\n</g>\n\n<style>\n  .net-circle {\n    stroke: var(--dGray);\n  }\n\n  .net-connector-line {\n    stroke: var(--dGray);\n    /* stroke-dasharray: 6 2; */\n  }\n\n  .arrowhead {\n    stroke: \"none\";\n    fill: #777;\n  }\n\n  .net-arrow {\n    stroke-width: 1;\n    stroke: var(--dGray);\n    stroke-dasharray: 3 1;\n  }\n</style>\n",
    "<script>\n  import { onMount, getContext } from \"svelte\";\n  import { fade } from \"svelte/transition\";\n  import { usageColor, generationColor } from \"./dailyChartUtils\";\n\n  import {\n    Runtime,\n    Inspector,\n  } from \"https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\";\n  import define from \"https://api.observablehq.com/d/47b9ac88545c0712.js?v=3\";\n\n  export let chartState;\n  export let id = \"legend-div\"; // must name the id of the element you want to inject the legend into\n\n  const { height } = getContext(\"LayerCake\");\n\n  // Import the netLegend cell from Observable, overwrite legend width and color scale\n  let notebookModule;\n  onMount(() => {\n    notebookModule = new Runtime().module(define, name => {\n      if (name === \"netLegend\") return new Inspector(document.querySelector(`#${id}`));\n    });\n    notebookModule.redefine(\"legendWidth\", 150);\n    notebookModule.redefine(\"usageColor\", usageColor);\n    notebookModule.redefine(\"generationColor\", generationColor);\n  });\n\n  $: showNet = chartState.net;\n</script>\n\n<div class=\"legend-container\" style=\"transform: translate(0, {$height * 0.5 - 130}px);\">\n  {#if !showNet}\n    <div transition:fade class=\"mask\" />\n  {/if}\n  <div class=\"legend\" {id} />\n</div>\n\n<style lang=\"scss\">.legend-container {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.mask {\n  position: absolute;\n  background-color: var(--white);\n  width: 200px;\n  height: 50px;\n}\n\n.legend {\n  padding-right: 30px;\n  color: var(--dGray);\n}\n\n.title {\n  font-family: \"Lucida Sans\", \"Lucida Sans Regular\", \"Lucida Grande\", \"Lucida Sans Unicode\", Geneva, Verdana, sans-serif;\n}</style>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { fade } from \"svelte/transition\";\n\n  export let chartState;\n  export let netSum;\n  export let currentMonthDisplay;\n  export let delay = 0;\n  const { height } = getContext(\"LayerCake\");\n\n  $: showNet = chartState.net;\n</script>\n\n{#if showNet}\n  <div\n    in:fade={{ delay: delay }}\n    class=\"net-sum-container\"\n    style=\"transform: translate(0px, {$height - 125}px)\"\n  >\n    <div class=\"sum\">{Math.round(netSum)} kWh</div>\n    <div class=\"units\">\n      average daily usage<br />{currentMonthDisplay !== null ? `in ${currentMonthDisplay}` : \"\"}\n    </div>\n    <div class=\"line-break\" />\n  </div>\n{/if}\n\n<style lang=\"scss\">.net-sum-container {\n  width: 180px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n}\n\n.sum {\n  font-family: \"Roboto Condensed\";\n  font-size: 36px;\n  font-weight: 700;\n  padding: 3px;\n  color: var(--orange);\n}\n\n.line-break {\n  margin: 10px auto;\n  border-top: solid 1px var(--dGray);\n  width: 80px;\n}\n\n.units {\n  font-size: 12px;\n  color: var(--dGray);\n  font-style: italic;\n  line-height: 1.3;\n}</style>\n",
    "<script>\n  import * as scroll from \"svelte-scrollto\";\n  export let sectionNames;\n\n  const scrollTo = element => {\n    console.log(`scrolling to ${element}`);\n    scroll.scrollTo({ element, duration: 1200 });\n  };\n</script>\n\n<div id=\"navbar\">\n  <!-- Logo -->\n  <div class=\"logo-container\">\n    <h1>Texas <span>Solar Homeowners</span> Savings Report</h1>\n  </div>\n\n  <!-- Links -->\n  <div class=\"links-container\">\n    <div on:click={() => scrollTo(\"#summary\")}>{sectionNames[0]}</div>\n    <div on:click={() => scrollTo(\"#walk-through\")}>{sectionNames[1]}</div>\n    <div on:click={() => scrollTo(\"#plan-comparison\")}>{sectionNames[2]}</div>\n    <div on:click={() => scrollTo(\"#resources\")}>{sectionNames[3]}</div>\n  </div>\n</div>\n\n<style lang=\"scss\">#navbar {\n  width: 100%;\n  height: 50px;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #020024;\n  background: linear-gradient(90deg, var(--dOrange) 0%, var(--orange) 100%);\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.15);\n}\n\n.links-container {\n  max-width: 70%;\n  display: flex;\n  justify-content: space-between;\n}\n.links-container div {\n  display: inline-block;\n  padding: 0 15px;\n  font-family: \"Roboto Condensed\";\n  font-size: 1.4rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  cursor: pointer;\n  color: var(--dGray);\n  letter-spacing: 0.025rem;\n  transition: transform 150ms;\n}\n.links-container div:hover {\n  transform: translateY(-1.5px);\n}\n\nh1 {\n  color: var(--white);\n  font-family: \"Roboto Condensed\";\n  letter-spacing: 0.15rem;\n  margin: 0px;\n}\nh1 span {\n  color: var(--lOrange);\n}</style>\n",
    "<script>\n  export let planDefs = [];\n</script>\n\n<div class=\"plan-defs-container\">\n  <div class=\"plans-container\">\n    {#each planDefs as plan}\n      <div class=\"plan-container col-3\">\n        <div class=\"plan-name _heading3\">{plan.plan}</div>\n        <div class=\"plan-def _body-text\">{@html plan.definition.replace(\"<br><br>\", \"\")}</div>\n      </div>\n    {:else}\n      <!-- nothing -->\n    {/each}\n  </div>\n</div>\n\n<style lang=\"scss\">.plan-defs-container {\n  width: 100%;\n  margin: 5rem 0 10rem;\n}\n\n.plan-container {\n  width: 100%;\n  margin: 4rem 0;\n}\n.plan-container .plan-name {\n  grid-area: n;\n  padding: 0px 30px;\n  text-align: right;\n  color: var(--orange);\n}\n.plan-container .plan-def {\n  grid-area: content;\n  color: var(--dGray);\n}\n.plan-container .plan-def :global(strong) {\n  color: var(--orange);\n}</style>\n",
    "<script>\n  import Icon from \"components/common/Icon.svelte\";\n  import { tooltip } from \"components/common/tooltip.js\";\n  import * as d3 from \"d3\";\n\n  export let bills = [];\n  export let plans = {};\n  export let planDefs;\n\n  let tooltipText = \"324\";\n\n  $: billType = bills.length > 0 ? bills[0].billType : \"annual\";\n  $: bills = bills.map(d => {\n    const amount = d.billType === \"annual\" ? d.annualBill : d.monthlyBill;\n\n    // add the rate details and tooltip for each plan\n    let rates = [];\n    let planTooltip;\n    if (Object.keys(plans).length > 0) {\n      const planRates = plans[d.plan];\n      switch (d.plan) {\n        case \"netMetering\":\n          rates = [\n            `<i>import:</i> <span class=\"rate-text\">${d3.format(\".1f\")(\n              planRates.import * 100\n            )}¢</span>`,\n            `<i>export:</i> <span class=\"rate-text\">${d3.format(\".1f\")(\n              planRates.export * 100\n            )}¢</span>`,\n          ];\n          planTooltip = planDefs.find(p => p.plan === \"1:1 Buyback\").definition;\n          break;\n        case \"partialBuyback\":\n          rates = [\n            `<i>import:</i> <span class=\"rate-text\">${d3.format(\".1f\")(\n              planRates.import * 100\n            )}¢</span>`,\n            `<i>export:</i> <span class=\"rate-text\">${d3.format(\".1f\")(\n              planRates.export * 100\n            )}¢</span>`,\n          ];\n          planTooltip = planDefs.find(p => p.plan === \"Partial Buyback\").definition;\n          break;\n        case \"freeNights\":\n          rates = [\n            `<i>import:</i> <span class=\"rate-text\">${d3.format(\".1f\")(\n              planRates.import * 100\n            )}¢</span>`,\n            `9am-9pm`,\n          ];\n          planTooltip = planDefs.find(p => p.plan === \"Free Nights\").definition;\n          break;\n      }\n    }\n    return {\n      ...d,\n      amount,\n      rates,\n      planTooltip,\n    };\n  });\n</script>\n\n<div class=\"table-container\">\n  <table>\n    <tr>\n      <th>Plan</th>\n      <th>Rates (per kWh)</th>\n      <th>Cost (per {billType === \"annual\" ? \"year\" : \"month\"})</th>\n    </tr>\n    {#each bills as bill}\n      <tr class=\"plan-row {!bill.isCheapest ? 'faded' : ''}\">\n        <td class=\"plan-cell \">\n          <div class=\"plan-container\">\n            <div\n              class=\"help-icon-container\"\n              use:tooltip={{\n                content: bill.planTooltip,\n                allowHTML: true,\n                placement: \"top-end\",\n                delay: [250, 100],\n                theme: \"solarUnited\",\n                arrow: false,\n              }}\n            >\n              <Icon\n                hoverable=\"true\"\n                name=\"help-circle\"\n                width=\"15px\"\n                height=\"20px\"\n                stroke=\"var(--dGray)\"\n                strokeWidth={2}\n              />\n            </div>\n            <div class=\"_body-text-bold\">\n              {bill.planDisplay}\n            </div>\n          </div>\n        </td>\n\n        <td class=\"rate-cell\">\n          {#each bill.rates as rateLine}\n            <div>{@html rateLine}</div>\n          {/each}\n        </td>\n\n        <td class=\"amount-cell \">\n          <div class=\"amount-container {bill.isCheapest ? 'cheapest' : ''}\">\n            {d3.format(\"$,.0f\")(bill.amount)}\n          </div>\n        </td>\n      </tr>\n    {/each}\n  </table>\n</div>\n\n<style lang=\"scss\">.table-container {\n  width: 100%;\n}\n\nth {\n  font-family: \"Roboto Condensed\";\n  font-weight: 700;\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  border-collapse: collapse;\n  text-align: left;\n  padding: 3px 0px;\n}\nth:first-of-type {\n  padding: 10px 10px;\n}\n\ntd {\n  padding: 10px 0px;\n  vertical-align: middle;\n}\ntd:first-of-type {\n  padding: 10px 10px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  padding-left: 10px;\n}\n\n.faded {\n  opacity: 0.3;\n}\n\n.plan-row {\n  width: 100px;\n  height: 50px;\n  padding: 10px;\n  margin: 10px;\n  border-top: solid 1px var(--dGray);\n}\n.plan-row:last-of-type {\n  border-bottom: solid 1px var(--dGray);\n}\n\n.plan-cell .plan-container {\n  display: flex;\n  align-items: center;\n}\n.plan-cell .help-icon-container {\n  cursor: pointer;\n}\n.plan-cell * {\n  padding-right: 5px;\n}\n\n.rate-cell :global(.rate-text) {\n  font-weight: bold;\n}\n\n.amount-cell {\n  text-align: center;\n  display: flex;\n  align-items: center;\n}\n.amount-cell .amount-container {\n  padding: 5px 10px;\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.amount-cell .amount-container.cheapest {\n  background: linear-gradient(60deg, var(--dOrange) 0%, var(--orange) 80%, var(--orange) 100%);\n  border-radius: 5px;\n  color: var(--white);\n  border: solid 1px var(--white);\n  box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.1);\n}</style>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import dayjs from \"dayjs\";\n  import { colorScale } from \"components/DailyChart/dailyChartUtils\";\n\n  export let selectedTs;\n  export let months = [];\n  export let handleMouse;\n  export let monthIdx = null;\n\n  const { data, xScale, yScale, xRange, width, height } = getContext(\"LayerCake\");\n\n  // Prep the hour labels\n  $: xTickVals = $data\n    .filter(d => {\n      if (selectedTs) {\n        return d.ts === selectedTs; // <- only show selected tick mark\n      } else {\n        return (d.ts !== 0) & (d.ts % 3 === 0);\n      }\n    })\n    .map((d, i) => {\n      const xPos = $xScale(d.ts) - $xScale.bandwidth() / 2;\n      const yPos = $yScale(0) + radius * 2;\n      return {\n        x1: xPos,\n        y1: yPos + 1,\n        x2: xPos,\n        y2: yPos + 5,\n        xText: xPos,\n        yText: yPos + 10,\n        ts: d.ts,\n        text: d.ts === 12 ? \"Noon\" : dayjs().hour(d.ts).format(\"h a\"),\n      };\n    });\n  $: radius = 9;\n</script>\n\n<g transform=\"translate({$width / 2}, {0})\">\n  <!-- MOUSEOVER EVENTS -->\n  {#each months as month}\n    <rect\n      x={$xScale(0) - $xScale.bandwidth()}\n      y={$yScale(month.monthIdx)}\n      width={$xRange[1] - $xRange[0] + $xScale.bandwidth()}\n      height={$yScale.bandwidth() + 1}\n      fill=\"#fff\"\n      on:mousemove={() => handleMouse(month.monthIdx)}\n      on:mouseout={() => handleMouse(null)}\n    />\n  {/each}\n\n  <g class=\"top-layer\">\n    <!-- Month Axes -->\n    {#each months as month}\n      <text\n        text-anchor=\"end\"\n        alignment-baseline=\"middle\"\n        x={$xScale(0) - radius * 2}\n        y={$yScale(month.monthIdx) + $yScale.bandwidth() / 2}\n        opacity={monthIdx === null ? 1 : monthIdx === month.monthIdx ? 1 : 0.3}\n        >{month.dateStr}</text\n      >\n      <line\n        x1={$xScale(0) - radius * 1.5}\n        y1={$yScale(month.monthIdx) + $yScale.bandwidth() / 2}\n        x2={$xScale(23) + radius * 1.5}\n        y2={$yScale(month.monthIdx) + $yScale.bandwidth() / 2}\n        opacity={monthIdx === null ? 1 : monthIdx === month.monthIdx ? 1 : 0}\n      />\n      <text\n        text-anchor=\"start\"\n        alignment-baseline=\"middle\"\n        x={$xScale(23) + radius * 2}\n        y={$yScale(month.monthIdx) + $yScale.bandwidth() / 2}\n        opacity={monthIdx === null ? 1 : monthIdx === month.monthIdx ? 1 : 0.3}\n        >{month.dateStr}</text\n      >\n    {/each}\n\n    <!-- Time Axis  -->\n    {#each xTickVals as xTick}\n      <line x1={xTick.x1} y1={xTick.y1} x2={xTick.x2} y2={xTick.y2} />\n      <text x={xTick.xText} y={xTick.yText} text-anchor=\"middle\" alignment-baseline=\"hanging\"\n        >{xTick.text}</text\n      >\n    {/each}\n\n    <!-- CIRCLES -->\n    {#each $data as circle}\n      <circle\n        cx={$xScale(circle.ts)}\n        cy={$yScale(circle.monthIdx) + $yScale.bandwidth() / 2}\n        r={7}\n        fill={colorScale(circle.net)}\n        stroke-width=\"1\"\n        stroke=\"#777\"\n        opacity={monthIdx === null ? 1 : monthIdx === circle.monthIdx ? 1 : 0.3}\n      />\n    {/each}\n  </g>\n</g>\n\n<style>\n  .top-layer {\n    pointer-events: none;\n  }\n\n  rect {\n    cursor: pointer;\n  }\n\n  text {\n    font-size: 1.4rem;\n    fill: var(--dGray);\n  }\n\n  line {\n    stroke: var(--dGray);\n  }\n</style>\n",
    "<script>\n  export let title = \"\";\n  export let caption = \"\";\n  export let alt = \"\";\n  export let imgSrc;\n</script>\n\n<div class=\"figure-container\">\n  <div class=\"title _body-text\">{title}</div>\n  <img src={imgSrc} {alt} />\n  <div class=\"caption-container\">\n    <div class=\"caption\">{caption}</div>\n  </div>\n</div>\n\n<style lang=\"scss\">.figure-container {\n  width: 90%;\n  height: 100%;\n  margin: 50px auto;\n}\n.figure-container img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.title {\n  margin-bottom: 20px;\n  font-family: \"Roboto Condensed\";\n  font-weight: bold;\n  color: var(--lBlue);\n  font-size: 2.3rem;\n}</style>\n",
    "<script context=\"module\">\n  // Taken from ONS: https://github.com/ONSvisual/svelte-scrolly which is:\n  // Based on svelte-scroller by Rich Harris\n  // https://github.com/sveltejs/svelte-scroller\n  // Patched to transpile to IE 11 and allow for split-screen view option\n\n  const handlers = [];\n  let manager;\n\n  if (typeof window !== \"undefined\") {\n    const run_all = () => handlers.forEach((fn) => fn());\n\n    window.addEventListener(\"scroll\", run_all);\n    window.addEventListener(\"resize\", run_all);\n  }\n\n  if (typeof IntersectionObserver !== \"undefined\") {\n    const map = new Map();\n\n    const observer = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach((entry) => {\n          const update = map.get(entry.target);\n          const index = handlers.indexOf(update);\n\n          if (entry.isIntersecting) {\n            if (index === -1) handlers.push(update);\n          } else {\n            update();\n            if (index !== -1) handlers.splice(index, 1);\n          }\n        });\n      },\n      {\n        rootMargin: \"400px 0px\", // TODO why 400?\n      }\n    );\n\n    manager = {\n      add: ({ outer, update }) => {\n        const { top, bottom } = outer.getBoundingClientRect();\n\n        if (top < window.innerHeight && bottom > 0) handlers.push(update);\n\n        map.set(outer, update);\n        observer.observe(outer);\n      },\n\n      remove: ({ outer, update }) => {\n        const index = handlers.indexOf(update);\n        if (index !== -1) handlers.splice(index, 1);\n\n        map.delete(outer);\n        observer.unobserve(outer);\n      },\n    };\n  } else {\n    manager = {\n      add: ({ update }) => {\n        handlers.push(update);\n      },\n\n      remove: ({ update }) => {\n        const index = handlers.indexOf(update);\n        if (index !== -1) handlers.splice(index, 1);\n      },\n    };\n  }\n</script>\n\n<script>\n  import { onMount } from \"svelte\";\n\n  // config\n  export let top = 0;\n  export let bottom = 1;\n  export let threshold = 0.5;\n  export let query = \"section\";\n  export let parallax = false;\n\n  // bindings\n  export let index = 0;\n  export let count = 0;\n  export let offset = 0;\n  export let progress = 0;\n  export let visible = false;\n  export let splitscreen = false; // Add class to allow for split screen option\n\n  let outer;\n  let bgContainer; // IE patch. Container binding to update inline style\n  let foreground;\n  let background;\n  let left;\n  let sections;\n  let wh = 0;\n  let fixed;\n  let offset_top;\n  let width = 1;\n  let height;\n  let inverted;\n\n  $: top_px = Math.round(top * wh);\n  $: bottom_px = Math.round(bottom * wh);\n  $: threshold_px = Math.round(threshold * wh);\n\n  $: top, bottom, threshold, parallax, update();\n\n  onMount(() => {\n    sections = foreground.querySelectorAll(query);\n    count = sections.length;\n\n    update();\n\n    const scroller = { outer, update };\n\n    manager.add(scroller);\n    return () => manager.remove(scroller);\n  });\n\n  // IE patch. BG container style (fixed/unfixed) set via function\n  function setFixed() {\n    if (bgContainer) {\n      let style = `position: ${\n        fixed ? \"fixed\" : \"absolute\"\n      }; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${\n        inverted ? 3 : 1\n      };`;\n      bgContainer.style.cssText = style;\n    }\n  }\n\n  function update() {\n    if (!foreground) return;\n\n    // re-measure outer container\n    const bcr = outer.getBoundingClientRect();\n    left = bcr.left;\n    width = bcr.right - bcr.left;\n\n    // determine fix state\n    const fg = foreground.getBoundingClientRect();\n    const bg = background.getBoundingClientRect();\n\n    visible = fg.top < wh && fg.bottom > 0;\n\n    const foreground_height = fg.bottom - fg.top;\n    const background_height = bg.bottom - bg.top;\n\n    const available_space = bottom_px - top_px;\n    progress = (top_px - fg.top) / (foreground_height - available_space);\n\n    if (progress <= 0) {\n      offset_top = 0;\n      if (fixed) {\n        fixed = false;\n        setFixed();\n      } // Non-IE specific patch to avoid setting style repeatedly\n    } else if (progress >= 1) {\n      offset_top = parallax\n        ? foreground_height - background_height\n        : foreground_height - available_space;\n      if (fixed) {\n        fixed = false;\n        setFixed();\n      }\n    } else {\n      offset_top = parallax\n        ? Math.round(top_px - progress * (background_height - available_space))\n        : top_px;\n      if (!fixed) {\n        fixed = true;\n        setFixed();\n      }\n    }\n\n    for (index = 0; index < sections.length; index += 1) {\n      const section = sections[index];\n      const { top } = section.getBoundingClientRect();\n\n      const next = sections[index + 1];\n      const bottom = next ? next.getBoundingClientRect().top : fg.bottom;\n\n      offset = (threshold_px - top) / (bottom - top);\n      if (bottom >= threshold_px) break;\n    }\n  }\n</script>\n\n<svelte:window bind:innerHeight={wh} />\n\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\n  <svelte-scroller-background-container class=\"background-container\" bind:this={bgContainer}>\n    <svelte-scroller-background bind:this={background}>\n      <slot name=\"background\" />\n    </svelte-scroller-background>\n  </svelte-scroller-background-container>\n\n  <svelte-scroller-foreground bind:this={foreground}>\n    <slot name=\"foreground\" />\n  </svelte-scroller-foreground>\n</svelte-scroller-outer>\n\n<style>\n  svelte-scroller-outer {\n    display: block;\n    position: relative;\n    max-width: 100%;\n  }\n\n  svelte-scroller-background {\n    display: block;\n    position: relative;\n    width: 100%;\n  }\n\n  svelte-scroller-foreground {\n    display: block;\n    position: relative;\n    z-index: 2;\n  }\n\n  svelte-scroller-foreground::after {\n    content: \" \";\n    display: block;\n    clear: both;\n  }\n\n  svelte-scroller-background-container {\n    display: block;\n    position: absolute;\n    width: 100%;\n    max-width: 100%;\n    pointer-events: none;\n    /* height: 100%; */\n\n    /* in theory this helps prevent jumping */\n    will-change: transform;\n    /* -webkit-transform: translate3d(0, 0, 0);\n\t\t-moz-transform: translate3d(0, 0, 0);\n\t\ttransform: translate3d(0, 0, 0); */\n  }\n</style>\n",
    "<script>\n  import Icon from \"components/common/Icon.svelte\";\n\n  export let stepText;\n</script>\n\n<div class=\"scroller-text-container\">\n  <p>{@html stepText}</p>\n  <div class=\"pulsing-arrow\">\n    <Icon name=\"chevrons-down\" width=\"50px\" height=\"20px\" strokeWidth={2} stroke=\"white\" />\n  </div>\n</div>\n\n<style lang=\"scss\">.scroller-text-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  height: auto;\n  padding: 30px;\n  background: #ffffff;\n  border: 1px solid #424040;\n  box-sizing: border-box;\n  box-shadow: 9px 9px 13px 4px rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n}\n.scroller-text-container p {\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 300;\n  font-size: 22px;\n  margin: 0px;\n  line-height: 150%;\n}\n.scroller-text-container .pulsing-arrow {\n  background: rgba(85, 85, 85, 0.3);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 50px;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  box-shadow: 0 0 0 0 rgba(204, 204, 204, 0.5);\n  animation: pulsing 2s infinite;\n}\n\n@keyframes pulsing {\n  0% {\n    transform: scale(0.8);\n  }\n  70% {\n    transform: scale(1);\n    box-shadow: 0 0 0 15px rgba(204, 204, 204, 0);\n  }\n  100% {\n    transform: scale(0.8);\n    box-shadow: 0 0 0 0 rgba(204, 204, 204, 0);\n  }\n}</style>\n",
    "<script>\n  export let section = \"\";\n  export let title = \"\";\n</script>\n\n<div class=\"col-3\">\n  <div class=\"container\">\n    <h3 class=\"_section-heading\">{section}</h3>\n    <h2 class=\"_heading2\">{title}</h2>\n  </div>\n</div>\n\n<style>\n  .container {\n    grid-area: content;\n    padding: 150px 0 100px;\n  }\n</style>\n",
    "<script>\n  import RangeSlider from \"svelte-range-slider-pips\";\n  import Icon from \"components/common/Icon.svelte\";\n  import { tooltip } from \"components/common/tooltip.js\";\n\n  export let sliderLabel = \"Slider label\";\n  export let sliderValue = [0];\n  export let icon = \"\";\n  export let tooltipText = \"\";\n  export let label = \"\";\n  export let min;\n  export let max;\n  export let step;\n  export let pipstep;\n  export let pipFormat = v => v;\n</script>\n\n<div class=\"container\">\n  <div class=\"slider-icon-container\">\n    <Icon name={icon} width=\"50px\" height=\"40px\" strokeWidth={1.5} stroke=\"var(--dGray)\" />\n  </div>\n\n  <div class=\"slider-container\">\n    <div class=\"slider-label\">\n      <!-- neet to wrap this in div in order to use tooltip -->\n      <div\n        class=\"help-icon-container\"\n        use:tooltip={{\n          content: tooltipText,\n          placement: \"top-end\",\n          delay: [250, 100],\n          theme: \"solarUnited\",\n          arrow: false,\n        }}\n      >\n        <Icon\n          hoverable=\"true\"\n          name=\"help-circle\"\n          width=\"15px\"\n          height=\"20px\"\n          stroke=\"var(--dGray)\"\n          strokeWidth={2}\n        />\n      </div>\n\n      <p>{sliderLabel}</p>\n    </div>\n    <RangeSlider\n      id=\"slider\"\n      bind:values={sliderValue}\n      float={false}\n      range=\"min\"\n      {step}\n      pips\n      {pipstep}\n      all=\"label\"\n      {min}\n      {max}\n      formatter={pipFormat}\n      springValues={{ stiffness: 1, damping: 1 }}\n    />\n  </div>\n</div>\n\n<style lang=\"scss\">.container {\n  display: flex;\n  padding: 8px 0;\n  width: 100%;\n}\n\n.slider-icon-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.help-icon-container {\n  cursor: pointer;\n}\n\n.slider-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.slider-label {\n  display: flex;\n  align-items: center;\n  font-style: italic;\n  font-size: 1.2rem;\n  padding-left: 10px;\n  pointer-events: all;\n}\n.slider-label p {\n  padding-left: 5px;\n}\n\n:global(#slider) {\n  --sliderColor: orange;\n  --handle: var(--sliderColor);\n  --handle-inactive: var(--sliderColor);\n  --range-inactive: var(--sliderColor);\n  --range-range: var(--sliderColor);\n  --range-handle: var(--sliderColor);\n  --range-handle-focus: var(--sliderColor);\n}</style>\n",
    "<script>\n  export let text;\n\n  $: paragraphs = Array.isArray(text) ? text : [{ value: text }];\n</script>\n\n<div class=\"col-3\">\n  <div class=\"container\">\n    {#each paragraphs as pText}\n      <p class=\"_body-text\">{@html pText.value}</p>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .container {\n    grid-area: content;\n  }\n\n  p {\n    margin-bottom: 50px;\n  }\n\n  :global(.p-intro) {\n    font-family: \"Roboto Condensed\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 2.3rem;\n    line-height: 2.9rem;\n    color: var(--green);\n  }\n\n  :global(strong) {\n    color: var(--green);\n  }\n</style>\n",
    "<script>\n  import Icon from \"components/common/Icon.svelte\";\n  export let sectionText;\n\n  let collaborators = [\n    {\n      name: \"Solar United Neighbors\",\n      logoURL: \"./assets/images/logo-SUN.png\",\n      link: \"http://solarunitedneighbors.org/\",\n    },\n    {\n      name: \"Texas Power Guide\",\n      logoURL: \"./assets/images/logo-TPG.png\",\n      link: \"https://www.texaspowerguide.com/\",\n    },\n    {\n      name: \"Mission:data Coalition\",\n      logoURL: \"./assets/images/logo-MD_mod.png\",\n      link: \"https://missiondata.io/\",\n    },\n  ];\n</script>\n\n<div class=\"footer-container body-content\">\n  <div class=\"grid-container\">\n    <div class=\"wide-container\">\n      <div class=\"wide-child about-container\">\n        <h3 class=\"_section-heading\">About</h3>\n        <div class=\"about-text _caption-text\">{sectionText.about}</div>\n      </div>\n\n      <div class=\"wide-child collaboration-container\">\n        <div class=\"_caption-text\">This project is a collaboration between:</div>\n        <div class=\"collaboration-links-container\">\n          {#each collaborators as collab}\n            <a href={collab.link} target=\"_blank\">\n              <div class=\"collaboration-link _caption-text\">\n                <img src={collab.logoURL} alt={`${collab.name} logo`} />\n                <div class=\"collaboration-name\">{collab.name}</div>\n              </div>\n            </a>\n          {/each}\n        </div>\n      </div>\n\n      <div class=\"wide-child design-credit _caption-text\">\n        Site design and development: <a href=\"https://www.jeffmacinnes.com\" target=\"_blank\"\n          >Jeff MacInnes</a\n        >\n      </div>\n    </div>\n\n    <div class=\"narrow-container\">\n      <div class=\"narrow-child contact-container\">\n        <h3 class=\"_section-heading\">Contact</h3>\n        <a class=\"contact-email _caption-text\" href=\"mailto:info@solarunitedneighbors.org\"\n          >info@solarunitedneighbors.org</a\n        >\n      </div>\n\n      <div class=\"narrow-child connect-container\">\n        <h3 class=\"_section-heading\">Connect</h3>\n        <div class=\"social-container\">\n          <a href=\"https://www.facebook.com/solarunitedneighbors/\">\n            <Icon\n              name=\"facebook\"\n              width=\"50px\"\n              height=\"40px\"\n              strokeWidth={1}\n              stroke=\"var(--lBlue)\"\n            />\n          </a>\n\n          <a href=\"https://twitter.com/solarneighbors\">\n            <Icon name=\"twitter\" width=\"50px\" height=\"40px\" strokeWidth={1} stroke=\"var(--lBlue)\" />\n          </a>\n\n          <a href=\"https://www.youtube.com/channel/UCJRrWlxEcDnCGh_u7opnUmw/videos\">\n            <Icon name=\"youtube\" width=\"50px\" height=\"40px\" strokeWidth={1} stroke=\"var(--lBlue)\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"copyright _caption-text\">\n    Copyright Ⓒ 2021 Solar United Neighbors. All Rights Reserved\n  </div>\n</div>\n\n<style lang=\"scss\">.footer-container {\n  width: 100%;\n  border-top: solid 3px var(--green);\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-areas: \"wide wide narrow\";\n  padding: 3rem 0;\n}\n\n.wide-container {\n  grid-area: wide;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.wide-container .wide-child {\n  padding-bottom: 4rem;\n}\n.wide-container .about-container {\n  width: 90%;\n}\n.wide-container .collaboration-links-container {\n  display: flex;\n  justify-content: space-between;\n  width: 90%;\n  padding: 1rem 0;\n}\n.wide-container .collaboration-links-container a {\n  color: var(--lBlue);\n}\n.wide-container .collaboration-links-container a:hover {\n  color: var(--orange);\n}\n.wide-container .collaboration-links-container .collaboration-link {\n  font-weight: 500;\n  font-size: 1.3rem;\n  cursor: pointer;\n}\n.wide-container .collaboration-links-container .collaboration-link img {\n  height: 38px;\n}\n.wide-container .design-credit {\n  color: var(--lBlue);\n}\n.wide-container .design-credit a {\n  font-weight: 500;\n  color: var(--lBlue);\n}\n.wide-container .design-credit a:hover {\n  color: var(--orange);\n}\n\n.narrow-container {\n  grid-area: narrow;\n  display: flex;\n  flex-direction: column;\n}\n.narrow-container .contact-container a {\n  font-weight: 500;\n  text-decoration: none;\n  color: var(--lBlue);\n}\n.narrow-container .narrow-child {\n  padding-bottom: 4rem;\n}\n.narrow-container .social-container {\n  display: flex;\n}\n\n.copyright {\n  width: 100%;\n  margin: auto 0;\n  text-align: center;\n  margin-bottom: 3rem;\n}</style>\n",
    "<script>\n  import { LayerCake, Svg, Html } from \"layercake\";\n\n  import TitleCardBg from \"./TitleCardBg.svelte\";\n  import TitleCardText from \"./TitleCardText.svelte\";\n\n  export let sectionText;\n\n  // parallax factors\n  let y;\n  $: fgFactor = y * 0.4;\n  $: titleFactor = y * 0.63;\n  $: bgFactor = y * 0.2;\n\n  // Set the margin to postion the top of the title card\n  let innerH;\n  $: titleMarginTop = innerH / 2 - 300;\n</script>\n\n<svelte:window bind:scrollY={y} bind:innerHeight={innerH} />\n<section id=\"hero\">\n  <div class=\"full-image bg\" style=\"transform: translate(0, {bgFactor}px);\" />\n  <div class=\"body-content\" style=\"transform: translate(0, {titleFactor}px)\">\n    <div class=\"col-3 title-layer\" style=\"margin-top: {titleMarginTop}px\">\n      <div class=\"title-card-container\">\n        <LayerCake padding={{ top: 0, left: 0 }}>\n          <Svg>\n            <TitleCardBg />\n          </Svg>\n\n          <Html>\n            <TitleCardText title={sectionText.title} subtitle={sectionText.subtitle} />\n          </Html>\n        </LayerCake>\n      </div>\n    </div>\n  </div>\n  <div class=\"full-image fg\" style=\"transform: translate(0, {fgFactor}px)\" />\n</section>\n\n<style lang=\"scss\">.fg {\n  background-image: url(\"./assets/images/hero2_fg.png\");\n  background-color: transparent;\n}\n\n.title-layer {\n  position: relative;\n  height: 1200px;\n  width: 100%;\n}\n\n.title-card-container {\n  grid-area: content;\n  width: 100%;\n  height: 100%;\n}\n\n.bg {\n  background-image: url(\"./assets/images/hero2_bg.png\");\n}\n\n.full-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n#hero {\n  position: relative;\n  top: 0;\n  width: 100%;\n  height: calc(100vh - 50px);\n  background-color: lightgray;\n  overflow: hidden;\n}</style>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { range } from \"d3-array\";\n  import { scaleBand } from \"d3-scale\";\n  const { containerWidth, containerHeight } = getContext(\"LayerCake\");\n\n  let strokeWidth = 10;\n\n  $: w = $containerWidth;\n  $: h = $containerHeight;\n\n  // scale to calculate position of each pv cell\n  let nCellsX = 6;\n  $: cellScale = scaleBand()\n    .domain(range(nCellsX))\n    .range([0, w - strokeWidth])\n    .padding(0.03)\n    .align(0.5);\n\n  $: cellW = cellScale.bandwidth();\n  $: cells = range(Math.floor((w / cellW) * (h / cellW))).map(d => {\n    const j = d % nCellsX; // col\n    const i = Math.floor(d / nCellsX); // row\n    return { i, j };\n  });\n  $: cellVerticalPadding = cellScale.padding() * cellScale.bandwidth();\n</script>\n\n<filter id=\"dropshadow\" height=\"130%\">\n  <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"10\" />\n  <!-- stdDeviation is how much to blur -->\n  <feOffset dx=\"5\" dy=\"20\" result=\"offsetblur\" />\n  <!-- how much to offset -->\n  <feComponentTransfer>\n    <feFuncA type=\"linear\" slope=\"0.3\" />\n    <!-- slope is the opacity of the shadow -->\n  </feComponentTransfer>\n  <feMerge>\n    <feMergeNode />\n    <!-- this contains the offset blurred image -->\n    <feMergeNode in=\"SourceGraphic\" />\n    <!-- this contains the element that the filter is applied to -->\n  </feMerge>\n</filter>\n\n<!-- BG -->\n<rect class=\"card-bg\" width={w} height={h} x={0} y={0} stroke-width={strokeWidth} />\n\n<!-- pvCells -->\n<g transform=\"translate({strokeWidth / 2}, {strokeWidth / 2 + cellVerticalPadding})\">\n  {#each cells as { i, j }}\n    <rect\n      class=\"pv-cell\"\n      width={cellW}\n      height={cellW}\n      x={cellScale(j)}\n      y={i * cellW + cellVerticalPadding * i}\n      rx=\"7\"\n      ry=\"7\"\n    />\n  {/each}\n</g>\n\n<style>\n  .card-bg {\n    fill: #333e4f;\n    stroke: var(--white);\n    stroke-width: 10;\n    opacity: 1;\n    filter: url(#dropshadow);\n  }\n\n  .pv-cell {\n    fill: var(--charcoal);\n  }\n</style>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  export let title;\n  export let subtitle;\n\n  const { containerWidth, containerHeight } = getContext(\"LayerCake\");\n</script>\n\n<div class=\"title-container\">\n  <div class=\"title _heading1\">{@html title}</div>\n  <div class=\"break\" />\n  <div class=\"subtitle _heading2\">{subtitle}</div>\n</div>\n\n<style lang=\"scss\">.title-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 30px;\n}\n\n.title {\n  color: var(--white);\n}\n.title :global(span) {\n  color: var(--lOrange);\n}\n\n.break {\n  width: 80%;\n  height: 1px;\n  border: solid 2px var(--green);\n  margin: 30px 0px;\n}\n\n.subtitle {\n  color: var(--lOrange);\n  font-size: 3rem;\n  line-height: 3.47rem;\n}</style>\n",
    "<script>\n  import { LayerCake, Svg, Html } from \"layercake\";\n  import { sum, range } from \"d3-array\";\n  import { scaleBand } from \"d3-scale\";\n  import { deg2rad } from \"components/utils\";\n  import SectionHeading from \"components/common/SectionHeading.svelte\";\n  import TextBlock from \"components/common/TextBlock.svelte\";\n  import Axes from \"components/DailyChart/Axes.svelte\";\n  import EnergyArcs from \"components/DailyChart/EnergyArcs.svelte\";\n  import DaylightArc from \"components/DailyChart/DaylightArc.svelte\";\n  import Net from \"components/DailyChart/Net.svelte\";\n  import NetLegend from \"components/DailyChart/NetLegend.svelte\";\n  import NetSumText from \"components/DailyChart/NetSumText.svelte\";\n  import SeasonalChart from \"components/SeasonalChart/SeasonalChart.svelte\";\n  import Slider from \"components/common/Slider.svelte\";\n  import PlanTable from \"components/PlanTable/PlanTable.svelte\";\n\n  import { sliderOpts } from \"./sliderOptions.js\";\n\n  export let solarUtils;\n  export let sectionText;\n  export let planDefs;\n\n  let currentDailyData = [];\n  let currentMonthlyData = [];\n  let months = [];\n  let bills = [];\n  let plans = {};\n  let daylight = { sunrise: 6, sunset: 19 };\n  let chartState = {\n    usage: true,\n    generation: true,\n    net: true,\n  };\n\n  // Slider Defaults\n  let houseSize = [0];\n  let peakTime = [6];\n  let panelSize = [6];\n\n  // Seasonal Variation chart vars (null if nothing selected)\n  let monthIdx = null;\n  let tsIdx = null;\n  let currentMonthDisplay = null;\n\n  const handleMouse = e => {\n    monthIdx = e;\n  };\n\n  $: {\n    if (solarUtils.loaded) {\n      /* Generate monthly dataset (generate data first day of each month month)\n        given the current input parameters */\n      const { generateMeanData, generateMonthlyData, generateMonthlyBills, generateAnnualBills } =\n        solarUtils;\n      const monthlyData = generateMonthlyData(panelSize, houseSize, peakTime);\n      const monthlyBills = generateMonthlyBills(monthlyData);\n      currentMonthlyData = monthlyData;\n\n      // set local access to the other relevant vars from the notebook\n      plans = solarUtils.plans;\n      months = solarUtils.months;\n\n      // set data based on whether seasonal variation chart is interacted with or not\n      if (monthIdx !== null) {\n        currentDailyData = monthlyData.filter(d => d.monthIdx === monthIdx);\n        let thisMonth = months.find(d => d.monthIdx === monthIdx);\n        currentMonthDisplay = thisMonth.month;\n        daylight = { sunrise: thisMonth.sunrise, sunset: thisMonth.sunset };\n        bills = monthlyBills\n          .find(d => d.monthIdx === monthIdx)\n          .plans.map(d => ({ ...d, billType: \"monthly\" }));\n      } else {\n        currentDailyData = generateMeanData(monthlyData);\n        currentMonthDisplay = null;\n        daylight = { sunrise: 6, sunset: 19 };\n        bills = generateAnnualBills(monthlyBills).map(d => ({ ...d, billType: \"annual\" }));\n      }\n    } else {\n      currentDailyData = [];\n      currentMonthlyData = [];\n    }\n  }\n  $: netSum = currentDailyData ? sum(currentDailyData, d => d.net) : 0;\n\n  $: toolTips = sectionText.sliderToolTips[0];\n</script>\n\n<section id=\"plan-comparison\" class=\"body-content\">\n  <SectionHeading section={sectionText.section} title={sectionText.subtitle} />\n  <TextBlock text={sectionText.overview} />\n\n  <div class=\"inputs-plans-container\">\n    <div class=\"inputs-container\">\n      <h3 class=\"_heading3\">Adjust your energy settings</h3>\n      <div class=\"sliders-container\">\n        <!-- INPUTS -->\n        <Slider\n          tooltipText={toolTips.homeSize}\n          {...sliderOpts.houseSize}\n          bind:sliderValue={houseSize}\n        />\n        <Slider\n          tooltipText={toolTips.peakTime}\n          {...sliderOpts.peakTime}\n          bind:sliderValue={peakTime}\n        />\n        <Slider\n          tooltipText={toolTips.panelSize}\n          {...sliderOpts.panelSize}\n          bind:sliderValue={panelSize}\n        />\n      </div>\n    </div>\n\n    <div class=\"plans-container\">\n      <!-- PLANS -->\n      <h3 class=\"_heading3\">Compare electric plans</h3>\n      <div class=\"plan-table-container\">\n        <PlanTable {bills} {plans} {planDefs} />\n      </div>\n    </div>\n  </div>\n\n  <!-- DAILY CHART GRAPHIC -->\n  <div class=\"daily-chart-container\">\n    <h3 class=\"_heading3 daily-chart-title\">Daily net energy</h3>\n    <LayerCake\n      data={currentDailyData}\n      padding={{ bottom: 40, top: 20 }}\n      xScale={scaleBand().align(0)}\n      xRange={[-deg2rad(90), deg2rad(90)]}\n      xDomain={currentDailyData.map(d => d.ts)}\n      yRange={[150, 270]}\n      yDomain={[-6, 6]}\n    >\n      <Svg>\n        <DaylightArc {chartState} {daylight} />\n        <EnergyArcs {chartState} selectedTs={null} />\n        <Axes selectedTs={null} />\n        <Net {chartState} selectedTs={null} />\n      </Svg>\n\n      <Html>\n        <NetLegend id=\"plancomparison-legend\" {chartState} />\n        <NetSumText {chartState} {netSum} {currentMonthDisplay} delay={1200} />\n      </Html>\n    </LayerCake>\n  </div>\n\n  <!-- SEASONAL CHART GRAPHIC -->\n  <div class=\"seasonal-chart-container\">\n    <h3 class=\"_heading3 seasonal-chart-title\">Monthly net energy</h3>\n    <LayerCake\n      padding={{ top: 0, left: 20, right: 20, bottom: 80 }}\n      data={currentMonthlyData}\n      xScale={scaleBand().paddingInner(0.05).align(0.5)}\n      xRange={[-270, 270]}\n      xDomain={currentMonthlyData.map(d => d.ts)}\n      yScale={scaleBand().paddingInner(0.05).align(0.5)}\n      yDomain={range(months.length)}\n    >\n      <Svg>\n        <SeasonalChart {months} {handleMouse} {monthIdx} />\n      </Svg>\n    </LayerCake>\n  </div>\n</section>\n\n<style lang=\"scss\">#plan-comparison {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  min-height: 100vh;\n}\n\n.daily-chart-container {\n  position: relative;\n  width: 100%;\n  height: 400px;\n  max-height: 400px;\n  margin-top: 20px;\n}\n\n.daily-chart-title {\n  position: absolute;\n  top: 0;\n}\n\n.seasonal-chart-container {\n  position: relative;\n  width: 100%;\n  height: 300px;\n  margin-top: 20px;\n}\n\n.inputs-plans-container {\n  margin-top: 100px;\n  width: 100%;\n  display: flex;\n}\n.inputs-plans-container .inputs-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 10px 0px;\n}\n.inputs-plans-container .inputs-container .sliders-container {\n  padding: 0px 25px;\n}\n.inputs-plans-container .plans-container {\n  padding: 10px 0px;\n  width: 100%;\n}\n.inputs-plans-container .plans-container .plan-table-container {\n  padding: 0px 25px;\n}</style>\n",
    "<script>\n  import SectionHeading from \"components/common/SectionHeading.svelte\";\n  export let sectionText;\n</script>\n\n<section id=\"resources\" class=\"body-content\">\n  <SectionHeading section={sectionText.section} title={sectionText.subtitle} />\n  <div class=\"col-3\">\n    <div class=\"resources-container\">\n      {#each sectionText.resources as resource}\n        <div class=\"resource\">\n          <a class=\"link _section-heading\" href={resource.link} target=\"_blank\">{resource.name}</a>\n          <p class=\"description _body-text\">{resource.text}</p>\n        </div>\n      {/each}\n    </div>\n  </div>\n</section>\n\n<style lang=\"scss\">#resources {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  min-height: 100vh;\n}\n\n.resources-container {\n  grid-area: content;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  z-index: 1;\n}\n\n.resource {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 3rem 0;\n}\n.resource .link {\n  color: var(--green);\n  font-size: 2rem;\n  padding-bottom: 0.5rem;\n}\n.resource .link:hover {\n  color: var(--orange);\n}\n.resource .description {\n  color: var(--text);\n}</style>\n",
    "<script>\n  import SectionHeading from \"components/common/SectionHeading.svelte\";\n  import TextBlock from \"components/common/TextBlock.svelte\";\n  import PlanDefsBox from \"components/PlanDefsBox/PlanDefsBox.svelte\";\n  import Figure from \"components/common/Figure.svelte\";\n\n  export let sectionText;\n</script>\n\n<section id=\"summary\">\n  <div class=\"body-content\">\n    <SectionHeading section={sectionText.section} title={sectionText.subtitle} />\n    <div class=\"col-3\">\n      <div class=\"quote _quote-text\">\n        {sectionText.quote1}\n      </div>\n    </div>\n    <!-- Figure 1 Section -->\n    <TextBlock text={sectionText.textBlock1} />\n    <Figure\n      imgSrc=\"./assets/images/Fig1@2x.png\"\n      title={sectionText.figures.find(p => p.fig === \"1\").title}\n      alt={sectionText.figures.find(p => p.fig === \"1\").alt}\n    />\n\n    <!-- Figure 2 Section -->\n    <div class=\"divider\" />\n    <TextBlock text={sectionText.textBlock2} />\n    <PlanDefsBox planDefs={sectionText.planDefinitions} />\n    <TextBlock text={sectionText.textBlock3} />\n    <Figure\n      imgSrc=\"./assets/images/Fig2@2x.png\"\n      title={sectionText.figures.find(p => p.fig === \"2\").title}\n      alt={sectionText.figures.find(p => p.fig === \"2\").alt}\n    />\n\n    <!-- Figure 2 Section -->\n\n    <div class=\"divider\" />\n    <TextBlock text={sectionText.textBlock4} />\n    <Figure\n      imgSrc=\"./assets/images/Fig3@2x.png\"\n      title={sectionText.figures.find(p => p.fig === \"3\").title}\n      alt={sectionText.figures.find(p => p.fig === \"3\").alt}\n    />\n    <TextBlock text={sectionText.textBlock5} />\n  </div>\n</section>\n\n<style lang=\"scss\">#summary {\n  width: 100%;\n  height: auto;\n  background-color: var(--white);\n}\n\n.divider {\n  width: 80%;\n  border-bottom: solid 1px #ccc;\n  margin: 10rem auto;\n}\n\n.quote {\n  grid-area: content;\n  margin-bottom: 50px;\n}</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { tweened } from \"svelte/motion\";\n  import { cubicInOut } from \"svelte/easing\";\n  import Scroller from \"components/common/Scroller.svelte\";\n  import { LayerCake, Svg, Html } from \"layercake\";\n  import { scaleBand } from \"d3-scale\";\n  import { sum, range } from \"d3-array\";\n  import dayjs from \"dayjs\";\n  import { deg2rad } from \"components/utils\";\n  import SectionHeading from \"components/common/SectionHeading.svelte\";\n  import TextBlock from \"components/common/TextBlock.svelte\";\n  import Axes from \"components/DailyChart/Axes.svelte\";\n  import EnergyArcs from \"components/DailyChart/EnergyArcs.svelte\";\n  import DaylightArc from \"components/DailyChart/DaylightArc.svelte\";\n  import Net from \"components/DailyChart/Net.svelte\";\n  import NetLegend from \"components/DailyChart/NetLegend.svelte\";\n  import NetSumText from \"components/DailyChart/NetSumText.svelte\";\n  import ScrollerTextBox from \"components/common/ScrollerTextBox.svelte\";\n\n  import { chartStates } from \"./chartStates\";\n\n  export let sectionText;\n  export let solarUtils;\n\n  const scrollSteps = sectionText.steps;\n\n  // Set up data vars. The currentData tween MUST start with a datasets that matches structure of the real data\n  let sampleDatasets = {};\n  let startingData = range(24).map(d => ({\n    ts: 0,\n    net: 0,\n    usage: 0,\n    generation: 0,\n    dayIdx: 156,\n    monthIdx: 6,\n    monthStr: \"Jun\",\n    date: dayjs(\"2019-06-01\"),\n  }));\n  let currentData = tweened(startingData, { duration: 450, easing: cubicInOut });\n  let daylight = { sunrise: 6, sunset: 20 };\n\n  $: {\n    if (solarUtils.loaded) {\n      // Generate sample datasets to use for the walk-through\n      const { generateMonthlyData, months } = solarUtils;\n      let panelSize = 6; // <-- hardcode inputs to generate a sample data set\n      const houseSize = 1; // 2br\n      const peakTime = 6; // peak energy time\n      const monthIdx = 5; // month to sample from\n\n      // Typical dataset\n      sampleDatasets[\"typical\"] = generateMonthlyData(panelSize, houseSize, peakTime).filter(\n        d => d.monthIdx === monthIdx // filter sample data to single month\n      );\n\n      // No solar dataset\n      panelSize = 0;\n      sampleDatasets[\"noSolar\"] = generateMonthlyData(panelSize, houseSize, peakTime).filter(\n        d => d.monthIdx === monthIdx // filter sample data to single month\n      );\n\n      // Big\n      panelSize = 12;\n      sampleDatasets[\"largeSolar\"] = generateMonthlyData(panelSize, houseSize, peakTime).filter(\n        d => d.monthIdx === monthIdx // filter sample data to single month\n      );\n\n      // update currentData tween store with the first dataset\n      currentData.set(sampleDatasets[chartStates[0].data]);\n\n      // set sunrise and sunset\n      let { sunset, sunrise } = months.find(d => d.monthIdx == monthIdx);\n      daylight = {\n        sunset,\n        sunrise,\n      };\n    }\n  }\n  $: netSum = $currentData ? sum($currentData, d => d.net) : 0;\n\n  // --- Scroll state\n  let index, offset, progress, count;\n  let indexPrev;\n  let chartState = chartStates[0];\n  onMount(() => {\n    indexPrev = index;\n  });\n\n  $: if (indexPrev !== index) {\n    // update chart state on scroll state change\n    indexPrev = index;\n    if (index < chartStates.length) {\n      chartState = chartStates[index];\n      currentData.set(solarUtils.loaded ? sampleDatasets[chartState.data] : startingData);\n    }\n  }\n</script>\n\n<section id=\"walk-through\" class=\"body-content\">\n  <SectionHeading section={sectionText.section} title={sectionText.subtitle} />\n  <TextBlock text={sectionText.overview} />\n  <Scroller threshold={0.65} bind:index bind:offset bind:progress bind:count>\n    <div slot=\"background\">\n      <div class=\"chart-container\">\n        <LayerCake\n          data={$currentData}\n          padding={{ bottom: 40, top: 20 }}\n          xScale={scaleBand().align(0)}\n          xRange={[-deg2rad(90), deg2rad(90)]}\n          xDomain={$currentData.map(d => d.ts)}\n          yRange={[150, 270]}\n          yDomain={[-6, 6]}\n        >\n          <Svg>\n            <DaylightArc {chartState} {daylight} />\n            <EnergyArcs {chartState} selectedTs={null} />\n            <Axes selectedTs={null} />\n            <Net {chartState} selectedTs={null} />\n          </Svg>\n\n          <Html>\n            <NetLegend {chartState} id=\"walkthrough-legend\" />\n            <NetSumText {chartState} {netSum} currentMonthDisplay={null} delay={1200} />\n          </Html>\n        </LayerCake>\n      </div>\n    </div>\n\n    <div slot=\"foreground\">\n      {#each scrollSteps as step}\n        <section class=\"scroll-section\">\n          <ScrollerTextBox stepText={step.text} />\n        </section>\n      {/each}\n    </div>\n  </Scroller>\n</section>\n\n<style lang=\"scss\">#walk-through {\n  width: 100%;\n  min-height: 100vh;\n}\n\n[slot=background] {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n[slot=foreground] {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n[slot=foreground] section {\n  width: 60%;\n  max-width: 600px;\n  height: auto;\n  margin: 50vh auto;\n}\n[slot=foreground] section:first-of-type {\n  margin: 80vh auto;\n}\n\n.chart-container {\n  margin-top: 10vh;\n  width: 100%;\n  height: 100%;\n  max-height: 400px;\n}\n\n.arrow-container {\n  grid-area: content;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.pulsing-arrow {\n  background: rgba(85, 85, 85, 0.3);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  box-shadow: 0 0 0 0 rgba(204, 204, 204, 0.5);\n  animation: pulsing 2s infinite;\n}\n\n@keyframes pulsing {\n  0% {\n    transform: scale(0.8);\n  }\n  70% {\n    transform: scale(1);\n    box-shadow: 0 0 0 15px rgba(204, 204, 204, 0);\n  }\n  100% {\n    transform: scale(0.8);\n    box-shadow: 0 0 0 0 rgba(204, 204, 204, 0);\n  }\n}</style>\n"
  ],
  "names": [],
  "mappings": "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"
}